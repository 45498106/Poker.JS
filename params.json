{"body":"Poker.JS\r\n=================\r\n[Chinese version readme 中文版本读我文档](#chinese-version-readme)\r\n\r\n# Usage\r\n\r\nFirst, load poker.js:\r\n```html\r\n<script src=\"poker.min.js\"></script>\r\n```\r\n\r\nThen there have 3 ways to create card by your choice\r\n\r\n## Way 1, Create DOM element\r\n#### Call `Poker.getCardImage` or `Poker.getCardCanvas` to get <img> or <canvas> element\r\n```js\r\n//insert a <img> to the end of body\r\ndocument.body.appendChild(Poker.getCardImage(60,'hearts','q'));\r\n//insert a <canvas> to the end of body\r\ndocument.body.appendChild(Poker.getCardCanvas(60,'hearts','q'));\r\n```\r\n\r\n## Way 2, Get base64 png image data\r\n#### Call `Poker.getCardData` to get image data\r\n```js\r\n//get image data and store in variable pokerHQ\r\nvar pokerHQ = Poker.getCardData(60,'hearts','q');\r\n```\r\n\r\n## Way 3, Draw card in your own canvas\r\n#### Add your own canvas to DOM\r\n```html\r\n<canvas id=\"myowncanvas\" width=\"1280\" height=\"720\"></canvas>\r\n```\r\n#### Get canvas 2d object and draw card\r\n```js\r\nvar canvas = document.getElementById('myowncanvas').getContext('2d');\r\ncanvas.drawPokerCard(10, 10, 120, 'hearts', '6');\r\n```\r\n\r\n*********************************************\r\n# Methon and parameters\r\n\r\n## Draw card number side\r\n\r\n#### Method\r\n```text\r\nPoker.getCardImage   (size, suit, point)\r\nPoker.getCardCanvas  (size, suit, point)\r\nPoker.getCardData    (size, suit, point)\r\ncanvas.drawPokerCard (x, y, size, suit, point)\r\n```\r\n\r\n#### Parameters\r\n```text\r\nx, y  - The x, y coordinate of top left corner of card in canvas. Default value is 0, 0.\r\nsize  - Height pixel of card. The ratio of card width and height is fixed to 3:4. Default value is 200.\r\nsuit  - Poker suit. The value is case insensitive and it should be one of these value in []:\r\n        ['hearts', 'diamonds', 'spades', 'clubs']\r\n        When card point is 'JOKER', 'heart' or 'diamonds' means big joker, 'spades' or 'clubs' means little joker.\r\n        Default value is 'hearts'.\r\npoint - Card point. The value is case insensitive and it should be one of these value in []:\r\n        ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'JOKER']\r\n        Default value is 'JOCKER'.\r\n```\r\n\r\n#### Example\r\n```js\r\ndocument.body.appendChild(Poker.getCardCanvas(100, 'hearts', 'Q'));\r\ncanvas.drawPokerCard (0, 400, 100, 'hearts', 'joker');\r\ncanvas.drawPokerCard (0, 400, 100, 'hearts', 'Q');\r\n```\r\n\r\n## Draw card back side\r\n\r\n#### Method\r\n```text\r\nPoker.getBackImage   (size[, foregroundColor, backgroundColor])\r\nPoker.getBackCanvas  (size[, foregroundColor, backgroundColor])\r\nPoker.getBackData    (size[, foregroundColor, backgroundColor])\r\ncanvas.drawPokerBack (x, y, size[, foregroundColor, backgroundColor])\r\n```\r\n\r\n#### Parameters\r\n```text\r\nx, y            - The x, y coordinate of top left corner of card in canvas. Default value is 0, 0.\r\nsize            - Height pixel of card. The ratio of card width and height is fixed to 3:4. Default value is 200.\r\nforegroundColor - Foreground color. Default value is '#AA2222'.\r\nbackgroundColor - Background color. Default value is '#BB5555'.\r\n```\r\n\r\n#### Example\r\n```js\r\ndocument.body.appendChild(Poker.getBackCanvas(300, '#2E319C', '#7A7BB8'));\r\ncanvas.drawPokerBack (10, 10, 300, '#a22', '#b55')\r\ncanvas.drawPokerBack (375, 400, 100, '#2E319C', '#7A7BB8');\r\n```\r\n<br>    \r\n<br>    \r\n************************\r\n# Chinese version readme\r\n# 中文版本读我文档\r\n************************\r\n<br>\r\n<br>\r\n# 使用方法\r\n\r\n首先，加载 poker.js\r\n```html\r\n<script src=\"poker.min.js\"></script>\r\n```\r\n\r\n接下去你可以从3种方法里选择一种来创建牌\r\n\r\n## 方法1，创建DOM元素\r\n#### 调用`Poker.getCardImage`或`Poker.getCardCanvas`来获取`<img>`或`<canvas>`元素\r\n```js\r\n//在body末尾插入一个<img>\r\ndocument.body.appendChild(Poker.getCardImage(60,'hearts','q'));\r\n//在body末尾插入一个<canvas>\r\ndocument.body.appendChild(Poker.getCardCanvas(60,'hearts','q'));\r\n```\r\n\r\n## 方法2，获取base64的png图像数据\r\n#### 调用`Poker.getCardData`来获取数据\r\n```js\r\n//获取图像数据并且存储在变量pokerHQ里\r\nvar pokerHQ = Poker.getCardData(60,'hearts','q');\r\n```\r\n\r\n## 方法3，在你自己的canvas里画牌\r\n#### 在DOM里添加你自己的canvas容器\r\n```html\r\n<canvas id=\"myowncanvas\" width=\"1280\" height=\"720\"></canvas>\r\n```\r\n#### 取得canvas的2d对象，在里面画牌\r\n```js\r\nvar canvas = document.getElementById('myowncanvas').getContext('2d');\r\ncanvas.drawPokerCard(10, 10, 120, 'hearts', '6');\r\n```\r\n\r\n*********************************************\r\n# 方法和参数\r\n\r\n## 画牌面\r\n\r\n#### 方法\r\n```text\r\nPoker.getCardImage   (size, suit, point)\r\nPoker.getCardCanvas  (size, suit, point)\r\nPoker.getCardData    (size, suit, point)\r\ncanvas.drawPokerCard (x, y, size, suit, point)\r\n```\r\n\r\n#### 参数\r\n```text\r\nx, y  - 牌的左上角在Canvas里的坐标。缺省值为0, 0。\r\nsize  - 牌的象素高度。牌的宽高比固定为3:4。缺省值为200。\r\nsuit  - 牌面花色。取值大小写不敏感，必须为下列[]内的值之一：\r\n        ['hearts', 'diamonds', 'spades', 'clubs']\r\n        值对应红桃，方块，黑桃，梅花\r\n        当牌面点数为'JOKER'时，红桃和方块表示牌为大王；黑桃和梅花表示牌为小王。\r\n        缺省值为'hearts'。\r\npoint - 牌面点数。取值大小写不敏感，必须为下列[]内的值之一：\r\n        ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'JOKER']\r\n        'JOKER'表示大王小王。缺省值为'JOCKER'。\r\n```\r\n\r\n#### 例子\r\n```js\r\ndocument.body.appendChild(Poker.getCardCanvas(100, 'hearts', 'Q'));\r\ncanvas.drawPokerCard (0, 400, 100, 'hearts', 'joker');\r\ncanvas.drawPokerCard (0, 400, 100, 'hearts', 'Q');\r\n```\r\n\r\n## 画牌背\r\n\r\n#### 方法\r\n```text\r\nPoker.getBackImage   (size[, foregroundColor, backgroundColor])\r\nPoker.getBackCanvas  (size[, foregroundColor, backgroundColor])\r\nPoker.getBackData    (size[, foregroundColor, backgroundColor])\r\ncanvas.drawPokerBack (x, y, size[, foregroundColor, backgroundColor]])\r\n```\r\n\r\n#### 参数\r\n```text\r\nx, y            - 牌的左上角在Canvas里的坐标。缺省值为0, 0。\r\nsize            - 牌的象素高度。牌的宽高比固定为3:4。缺省值为200。\r\nforegroundColor - 前景色。缺省值为'#a22'。\r\nbackgroundColor - 背景色。缺省值为'#b55'。\r\n```\r\n\r\n#### 例子\r\n```js\r\ndocument.body.appendChild(Poker.getBackCanvas(300, '#2E319C', '#7A7BB8'));\r\ncanvas.drawPokerBack (10, 10, 300, '#a22', '#b55')\r\ncanvas.drawPokerBack (375, 400, 100, '#2E319C', '#7A7BB8');\r\n```\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Poker.js","tagline":"This is a JS lib extend HTML5 canvas, allow user easly draw poker to canvas or create dom image."}